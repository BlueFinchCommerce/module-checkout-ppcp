import{m as e,a as t,g as o,P as n,c as a,i as s,d as r,f as i,n as c,b as d,j as l,o as h}from"../../../../createPPCPPaymentRest-CZMUDz-o.min.js";import{l as p}from"../../../../addScript-Ca9R_zUQ.min.js";import{i as m}from"../../../../venmo_logo_blue-DcKUhyRc.min.js";var u={name:"PpcpVenmoPayment",data:()=>({isMethodSelected:!1,errorMessage:"",ErrorMessage:null,PrivacyPolicy:null,RadioButton:null,Recaptcha:null,Agreements:null,paymentEmitter:null,isPaymentMethodAvailable:null,selectedMethod:"ppcp_venmo",method:"ppcp_venmo",isRecaptchaVisible:()=>{},orderID:null,venmoLoaded:!1,checkboxComponent:null,storeMethod:!1,isLoggedIn:!1}),props:{open:{type:Boolean,required:!1}},computed:{...e(n,["venmo","paypal","environment","buyerCountry","productionClientId","sandboxClientId"]),venmoLogo:()=>m},async mounted(){const{default:{components:{ErrorMessage:e,PrivacyPolicy:t,RadioButton:o,Recaptcha:n,Agreements:a,Checkbox:s}}}=await import(window.geneCheckout.main);this.Agreements=a,this.ErrorMessage=e,this.RadioButton=o,this.Recaptcha=n,this.PrivacyPolicy=t,this.checkboxComponent=s},async created(){const[e,t,o,n,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useRecaptchaStore","stores.usePaymentStore","stores.useConfigStore","stores.useCartStore","stores.useCustomerStore"]);this.paymentEmitter=t.paymentEmitter,this.isPaymentMethodAvailable=t.isPaymentMethodAvailable,this.isRecaptchaVisible=e.isRecaptchaVisible,this.isLoggedIn=a.isLoggedIn,t.$subscribe((e=>{void 0!==e.payload.selectedMethod&&(this.selectedMethod=e.payload.selectedMethod)})),this.paymentEmitter.on("changePaymentMethodDisplay",(({visible:e})=>{this.paymentVisible=e})),await o.getInitialConfig(),await n.getCart(),window.paypal_ppcp_venmo||await this.addScripts(),await this.renderPaypalInstance(),this.open&&await this.selectPaymentMethod()},watch:{selectedMethod:{handler(e){null!==e&&"ppcp_venmo"!==e&&(this.isMethodSelected=!1)},immediate:!0,deep:!0}},methods:{...t(n,["makePayment"]),async selectPaymentMethod(){this.isMethodSelected=!0;(await window.geneCheckout.helpers.loadFromCheckout("stores.usePaymentStore")).selectPaymentMethod("ppcp_venmo")},async addScripts(){const e=await window.geneCheckout.helpers.loadFromCheckout(["stores.useConfigStore"]),t=p(),o={intent:this.paypal.paymentAction,currency:e.currencyCode,components:"buttons"};return"sandbox"===this.environment?(o["buyer-country"]=this.buyerCountry,o["client-id"]=this.sandboxClientId):o["client-id"]=this.productionClientId,o["enable-funding"]="venmo",t("https://www.paypal.com/sdk/js",o,"ppcp_venmo")},async renderPaypalInstance(){const e=window.paypal_ppcp_venmo;if(e){const t={env:this.environment,commit:!0,style:{label:this.paypal.buttonLabel,size:"responsive",shape:this.paypal.buttonShape,color:"gold"===this.paypal.buttonColor?"blue":this.paypal.buttonColor,tagline:!1},fundingSource:e.FUNDING.VENMO,createOrder:async()=>{try{const e=await o(this.method,this.venmo.vaultActive,1),t=JSON.parse(e),[n]=t;return this.orderID=n,this.orderID}catch(e){return console.error("Error during createOrder:",e),null}},onClick:async()=>{const[e,t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useAgreementStore","stores.useLoadingStore"]);e.setErrorMessage("");return!!t.validateAgreements()&&(o.setLoadingState(!0),!0)},onApprove:async()=>{const[e,t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useLoadingStore","stores.useCartStore"]);return this.makePayment(o.cart.email,this.orderID,this.method,!1,this.storeMethod).then((()=>{window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()})).catch((o=>{t.setLoadingState(!1);try{window.geneCheckout.helpers.handleServiceError(o)}catch(t){e.setErrorMessage(t)}}))},onCancel:async()=>{(await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore"])).setLoadingState(!1)},onError:async e=>{const[t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useLoadingStore"]);o.setLoadingState(!1),t.setErrorMessage(e)}};await e.Buttons(t).render("#paypal-button-container-venmo"),this.venmoLoaded=!0}},redirectToSuccess(){window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()}}};const y=["src"],g={key:1,class:"venmo-content"};u.render=function(e,t,o,n,p,m){return h(),a("div",{class:c([{active:p.isMethodSelected},"venmo-container"])},[s("div",{class:c(["venmo-title",p.isMethodSelected?"selected":""]),onClick:t[0]||(t[0]=(...e)=>m.selectPaymentMethod&&m.selectPaymentMethod(...e)),onKeydown:t[1]||(t[1]=(...e)=>m.selectPaymentMethod&&m.selectPaymentMethod(...e))},[(h(),r(i(p.RadioButton),{id:"venmo-select",text:e.venmo.title,checked:p.isMethodSelected,"data-cy":"venmo-radio",class:"venmo-radio",onClick:m.selectPaymentMethod,onKeydown:m.selectPaymentMethod},null,40,["text","checked","onClick","onKeydown"])),s("img",{width:"48px",class:"venmo-logo",src:m.venmoLogo,alt:"venmo-logo"},null,8,y)],34),p.errorMessage?(h(),r(i(p.ErrorMessage),{key:0,message:p.errorMessage,attached:!1},null,8,["message"])):d("v-if",!0),s("div",{style:l({display:p.isMethodSelected?"block":"none"}),class:c(["paypal-button-container",p.venmoLoaded?"":"text-loading"]),id:"paypal-button-container-venmo","data-cy":"instant-checkout-ppcpPayPalVenmo"},null,6),p.isMethodSelected?(h(),a("div",g,[p.isLoggedIn&&"ppcp_venmo"===p.selectedMethod&&e.venmo.vaultActive?(h(),r(i(p.checkboxComponent),{key:0,id:"ppcp-store-method",class:"ppcp-store-method",checked:p.storeMethod,"change-handler":({currentTarget:e})=>p.storeMethod=e.checked,text:"Save for later use.","data-cy":"ppcp-save-payment-venmo-checkbox"},null,8,["checked","change-handler"])):d("v-if",!0),(h(),r(i(p.PrivacyPolicy))),p.isRecaptchaVisible("placeOrder")?(h(),r(i(p.Recaptcha),{key:1,id:"placeOrder",location:"ppcpPayment"})):d("v-if",!0),(h(),r(i(p.Agreements),{id:"ppcp-checkout-venmo"}))])):d("v-if",!0)],2)},u.__file="src/components/PaymentPage/PaymentMethods/Venmo/Venmo.vue";export{u as default};

import{p as e}from"../../../../index-T5r878YG.min.js";import{m as t,a as o,u as a,c as s,d as n,e as i,g as r,n as l,b as c,h as d,o as h}from"../../../../PpcpStore-Ch7RvKFb.min.js";import{c as g}from"../../../../createPPCPPaymentRest-CXPqU907.min.js";import{i as p}from"../../../../googlepaymark-1YVSBZ4_.min.js";var y={name:"PpcpGooglePayPayment",data:()=>({isMethodSelected:!1,googlePayLoaded:!1,button:null,errorMessage:"",ErrorMessage:null,PrivacyPolicy:null,RadioButton:null,Recaptcha:null,Agreements:null,paymentEmitter:null,isPaymentMethodAvailable:null,selectedMethod:"ppcp_googlepay",method:"ppcp_googlepay",isRecaptchaVisible:()=>{},orderID:null}),props:{open:{type:Boolean,required:!1}},computed:{...t(a,["google","environment","buyerCountry","productionClientId","sandboxClientId"]),googlePayLogo:()=>p},async mounted(){const{default:{components:{ErrorMessage:e,PrivacyPolicy:t,RadioButton:o,Recaptcha:a,Agreements:s}}}=await import(window.geneCheckout.main);this.Agreements=s,this.ErrorMessage=e,this.RadioButton=o,this.Recaptcha=a,this.PrivacyPolicy=t},async created(){const[e,t,o,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useRecaptchaStore","stores.usePaymentStore","stores.useConfigStore","stores.useCartStore"]);this.paymentEmitter=t.paymentEmitter,this.isPaymentMethodAvailable=t.isPaymentMethodAvailable,this.isRecaptchaVisible=e.isRecaptchaVisible,t.$subscribe((e=>{void 0!==e.payload.selectedMethod&&(this.selectedMethod=e.payload.selectedMethod)})),this.paymentEmitter.on("changePaymentMethodDisplay",(({visible:e})=>{this.paymentVisible=e})),await o.getInitialConfig(),await a.getCart(),await this.initGooglePay(),this.open&&await this.selectPaymentMethod()},watch:{selectedMethod:{handler(e){null!==e&&"ppcp_googlepay"!==e&&(this.isMethodSelected=!1)},immediate:!0,deep:!0}},methods:{...o(a,["getEnvironment","mapAddress","makePayment"]),async selectPaymentMethod(){this.isMethodSelected=!0,this.button&&(document.getElementById("ppcp-google-pay").appendChild(this.button),this.googlePayLoaded=!0);(await window.geneCheckout.helpers.loadFromCheckout("stores.usePaymentStore")).selectPaymentMethod("ppcp_googlepay")},async initGooglePay(){const[t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore"]),a={...{sandboxClientId:this.sandboxClientId,productionClientId:this.productionClientId,intent:this.google.paymentAction,pageType:"checkout",environment:this.environment,buyerCountry:this.buyerCountry,googlePayVersion:2,transactionInfo:{currencyCode:o.currencyCode,totalPriceStatus:"FINAL",totalPrice:(t.cartGrandTotal/100).toString()},button:{buttonColor:this.google.buttonColor.toLowerCase()}},...{placeOrder:e=>this.placeOrder(e),onPaymentAuthorized:(e,t)=>this.onPaymentAuthorized(e,t),onError:e=>this.onError(e),onCancel:()=>this.onCancel(),onValidate:()=>this.onValidate()}};e.googlePayment(a,"ppcp-google-pay"),this.googlePayLoaded=!0},async onValidate(){const[e,t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useAgreementStore","stores.usePaymentStore","stores.useRecaptchaStore"]);t.setErrorMessage("");const a=e.validateAgreements(),s=await o.validateToken("placeOrder");return a&&s},async onPaymentAuthorized(e,t){const o=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore"]);return new Promise((async a=>{if(o.cart.is_virtual||o.cart.shipping_addresses[0].selected_shipping_method)try{const o=await g(this.method);[this.orderID]=JSON.parse(o);const s={orderId:this.orderID,paymentMethodData:e.paymentMethodData},n=await t.confirmOrder(s);await this.onApprove(n,e),a({transactionState:"SUCCESS"})}catch(e){a({error:{reason:"PAYMENT_DATA_INVALID",message:e.message,intent:"PAYMENT_AUTHORIZATION"}})}else a({error:{reason:"SHIPPING_OPTION_INVALID",message:"No shipping method selected",intent:"SHIPPING_OPTION"}})}))},async onApprove(e,t){if(e.liabilityShift&&"POSSIBLE"!==e.liabilityShift)throw new Error("Cannot validate payment");await this.placeOrder(t)},async onCancel(){(await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore"])).setLoadingState(!1)},async onError(e){const[t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore","stores.usePaymentStore"]);t.setLoadingState(!1),o.setErrorMessage(e)},async placeOrder(e){const[t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore","stores.usePaymentStore"]);return this.makePayment(e.email,this.orderID,this.method,!1).then((()=>{window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()})).catch((e=>{t.setLoadingState(!1);try{window.geneCheckout.helpers.handleServiceError(e)}catch(e){o.setErrorMessage(e)}}))}}};const m=["src"],u={key:1,class:"google-pay-content"},P={class:"recaptcha"};y.render=function(e,t,o,a,g,p){return h(),s("div",{class:l([{active:g.isMethodSelected},"google-pay-container"])},[n("div",{class:l(["google-pay-title",g.isMethodSelected?"selected":""]),onClick:t[0]||(t[0]=(...e)=>p.selectPaymentMethod&&p.selectPaymentMethod(...e)),onKeydown:t[1]||(t[1]=(...e)=>p.selectPaymentMethod&&p.selectPaymentMethod(...e))},[(h(),i(r(g.RadioButton),{id:"google-pay-select",text:e.google.title,checked:g.isMethodSelected,"data-cy":"google-pay-radio",class:"google-pay-radio",onClick:p.selectPaymentMethod,onKeydown:p.selectPaymentMethod},null,40,["text","checked","onClick","onKeydown"])),n("img",{width:"48px",class:"google-pay-logo",src:p.googlePayLogo,alt:"google-pay-logo"},null,8,m)],34),g.errorMessage?(h(),i(r(g.ErrorMessage),{key:0,message:g.errorMessage,attached:!1},null,8,["message"])):c("v-if",!0),n("div",{style:d({display:g.isMethodSelected?"block":"none"}),id:"ppcp-google-pay",class:l(!g.googlePayLoaded&&g.isMethodSelected?"text-loading":""),"data-cy":"checkout-PPCPGooglePay"},null,6),g.isMethodSelected?(h(),s("div",u,[(h(),i(r(g.PrivacyPolicy))),n("div",P,[g.isRecaptchaVisible("placeOrder")?(h(),i(r(g.Recaptcha),{key:0,id:"placeOrder",location:"ppcpPaymentGoogle"})):c("v-if",!0)]),(h(),i(r(g.Agreements),{id:"ppcp-checkout-google-pay"}))])):c("v-if",!0)],2)},y.__file="src/components/PaymentPage/PaymentMethods/GooglePay/GooglePay.vue";export{y as default};

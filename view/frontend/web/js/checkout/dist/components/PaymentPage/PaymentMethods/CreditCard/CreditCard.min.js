import{p as e}from"../../../../index-Dbrmc3_a.min.js";import{m as t,a as r,P as a,c as s,d as o,e as i,g as d,n,b as c,h as l,o as h}from"../../../../PpcpStore-DVlKCpuk.min.js";import{c as u}from"../../../../createPPCPPaymentRest-nyJI9_gl.min.js";var p={name:"PpcpCreditCardPayment",props:{open:{type:Boolean,required:!1}},data:()=>({isMethodSelected:!1,errorMessage:"",hostedNumberErrorMessage:"",hostedDateErrorMessage:"",hostedCvvErrorMessage:"",ErrorMessage:null,PrivacyPolicy:null,RadioButton:null,Recaptcha:null,Agreements:null,MyButton:null,checkboxComponent:null,paymentEmitter:null,isPaymentMethodAvailable:null,selectedMethod:"ppcp_card",method:"ppcp_card",numberField:"#card-number-field-container",cvvField:"#card-cvv-field-container",expiryField:"#card-expiry-field-container",submitButton:"#card-field-submit-button",isRecaptchaVisible:()=>{},orderID:null,storeMethod:!1,isLoggedIn:!1}),computed:{...t(a,["card","environment","buyerCountry","productionClientId","sandboxClientId"])},watch:{selectedMethod:{handler(e){null!==e&&"ppcp_card"!==e&&(this.isMethodSelected=!1)},immediate:!0,deep:!0}},async mounted(){const{default:{components:{ErrorMessage:e,PrivacyPolicy:t,RadioButton:r,Recaptcha:a,Agreements:s,MyButton:o,Checkbox:i}}}=await import(window.geneCheckout.main);this.Agreements=s,this.ErrorMessage=e,this.RadioButton=r,this.Recaptcha=a,this.PrivacyPolicy=t,this.MyButton=o,this.checkboxComponent=i},async created(){const[e,t,r,a,s]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useRecaptchaStore","stores.usePaymentStore","stores.useConfigStore","stores.useCartStore","stores.useCustomerStore"]);this.paymentEmitter=t.paymentEmitter,this.isPaymentMethodAvailable=t.isPaymentMethodAvailable,this.isRecaptchaVisible=e.isRecaptchaVisible,this.isLoggedIn=s.isLoggedIn,t.$subscribe((e=>{void 0!==e.payload.selectedMethod&&(this.selectedMethod=e.payload.selectedMethod)})),this.paymentEmitter.on("changePaymentMethodDisplay",(({visible:e})=>{this.paymentVisible=e})),await r.getInitialConfig(),await a.getCart(),await this.initCardFields(),this.open&&await this.selectPaymentMethod()},methods:{...r(a,["makePayment"]),async selectPaymentMethod(){this.isMethodSelected=!0;(await window.geneCheckout.helpers.loadFromCheckout("stores.usePaymentStore")).selectPaymentMethod("ppcp_card")},async initCardFields(){const t=await window.geneCheckout.helpers.loadFromCheckout(["stores.useConfigStore"]),r=this,a=this.submitButton,s={...{sandboxClientId:this.sandboxClientId,productionClientId:this.productionClientId,intent:this.card.paymentAction,pageType:"checkout",environment:this.environment,buyerCountry:this.buyerCountry,currency:t.currencyCode,style:this.getStyles(),cardFields:{numberField:{id:this.numberField,placeholder:"4111 1111 1111 1111",inputEvents:{blur:(e,t)=>this.inputBlur(e,t,"cardNumberField")}},expiryField:{id:this.expiryField,placeholder:"MM/YY",inputEvents:{blur:(e,t)=>this.inputBlur(e,t,"cardExpiryField")}},cvvField:{id:this.cvvField,placeholder:"123",inputEvents:{blur:(e,t)=>this.inputBlur(e,t,"cardCvvField")}}}},...{createOrder:()=>this.createOrder(r),onApprove:()=>this.onApprove(r),onError:e=>this.onError(e),active:e=>this.active(e),onValidate:()=>this.onValidate(),handleErrors:e=>this.handleErrors(e,r)}};e.cardPayment(s,a)},async onValidate(){const[e,t,r]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useAgreementStore","stores.usePaymentStore","stores.useRecaptchaStore"]);t.setErrorMessage("");const a=e.validateAgreements(),s=await r.validateToken("placeOrder");return a&&s},active(){},inputBlur(e,t,r){t.className=e.fields[r].isValid||e.fields[r].isEmpty?"valid":"invalid"},createOrder:async e=>{const t=await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore"]);t.setLoadingState(!0);const r=e.storeMethod&&e.card.vaultActive&&e.isLoggedIn;try{const t=await u(e.method,r,1),a=JSON.parse(t),[s]=a;return e.orderID=s,e.orderID}catch(e){return t.setLoadingState(!1),console.error("Error during createOrder:",e),null}},onApprove:async e=>{const[t,r,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useLoadingStore","stores.usePaymentStore","stores.useCartStore"]);return e.makePayment(a.cart.email,e.orderID,e.method,!1,e.storeMethod).then((()=>{window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()})).catch((e=>{t.setLoadingState(!1),r.setErrorMessage(e.message)}))},handleErrors:async(e,t)=>{const[r,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useLoadingStore"]);if(t.hostedNumberErrorMessage="",t.hostedDateErrorMessage="",t.hostedCvvErrorMessage="","string"==typeof e)return r.setErrorMessage(e),a.setLoadingState(!1),t.errorMessage=e,void console.log(e);Array.isArray(e)?e.forEach((e=>{switch(a.setLoadingState(!1),e){case"INVALID_NUMBER":t.hostedNumberErrorMessage="Card number is not valid.";break;case"INVALID_EXPIRY":t.hostedDateErrorMessage="Expiry date is not valid.";break;case"INVALID_CVV":t.hostedCvvErrorMessage="CVV is not valid.";break;default:r.setErrorMessage(e)}})):console.warn("Unexpected errors format:",e)},getStyles:()=>({".valid":{color:"green"},".invalid":{color:"red"},input:{padding:"8px 15px","font-size":"16px"}})}};const m={class:"field required"},y=o("label",{for:"card-number-field-container",class:"label"},[o("span",null," Credit Card Number ")],-1),g=o("div",{id:"card-number-field-container"},null,-1),v={class:"field required"},M=o("label",{for:"card-expiry-field-container",class:"label"},[o("span",null," Expiration Date ")],-1),C=o("div",{id:"card-expiry-field-container"},null,-1),b={class:"field required"},f=o("label",{for:"card-cvv-field-container",class:"label"},[o("span",null," Card Verification Number ")],-1),k=o("div",{id:"card-cvv-field-container"},null,-1),E={key:1,class:"card-content"},P={class:"recaptcha"};p.render=function(e,t,r,a,u,p){return h(),s("div",{class:n([{active:u.isMethodSelected},"card-container"])},[o("div",{class:n(["card-title",u.isMethodSelected?"selected":""]),onClick:t[0]||(t[0]=(...e)=>p.selectPaymentMethod&&p.selectPaymentMethod(...e)),onKeydown:t[1]||(t[1]=(...e)=>p.selectPaymentMethod&&p.selectPaymentMethod(...e))},[(h(),i(d(u.RadioButton),{id:"card-select",text:e.card.title,checked:u.isMethodSelected,"data-cy":"card-radio",class:"card-radio",onClick:p.selectPaymentMethod,onKeydown:p.selectPaymentMethod},null,40,["text","checked","onClick","onKeydown"]))],34),u.errorMessage?(h(),i(d(u.ErrorMessage),{key:0,message:u.errorMessage,attached:!1},null,8,["message"])):c("v-if",!0),o("fieldset",{class:"card-fieldset",style:l({display:u.isMethodSelected?"block":"none"})},[o("div",m,[y,g,u.hostedNumberErrorMessage?(h(),i(d(u.ErrorMessage),{key:0,message:u.hostedNumberErrorMessage,attached:!1},null,8,["message"])):c("v-if",!0)]),o("div",v,[M,C,u.hostedDateErrorMessage?(h(),i(d(u.ErrorMessage),{key:0,message:u.hostedDateErrorMessage,attached:!1},null,8,["message"])):c("v-if",!0)]),o("div",b,[f,k,u.hostedCvvErrorMessage?(h(),i(d(u.ErrorMessage),{key:0,message:u.hostedCvvErrorMessage,attached:!1},null,8,["message"])):c("v-if",!0)])],4),(h(),i(d(u.MyButton),{id:"card-field-submit-button",label:e.$t("Pay"),style:l({display:u.isMethodSelected?"block":"none"}),primary:""},null,8,["label","style"])),u.isMethodSelected?(h(),s("div",E,[(h(),i(d(u.PrivacyPolicy))),o("div",P,[u.isRecaptchaVisible("placeOrder")?(h(),i(d(u.Recaptcha),{key:0,id:"placeOrder",location:"ppcpPaymentCredit"})):c("v-if",!0)]),u.isLoggedIn&&"ppcp_card"===u.selectedMethod&&e.card.vaultActive?(h(),i(d(u.checkboxComponent),{key:0,id:"ppcp-store-method",class:"ppcp-store-method",checked:u.storeMethod,"change-handler":({currentTarget:e})=>u.storeMethod=e.checked,text:"Save for later use.","data-cy":"ppcp-save-payment-card-checkbox"},null,8,["checked","change-handler"])):c("v-if",!0),(h(),i(d(u.Agreements),{id:"ppcp-checkout-card"}))])):c("v-if",!0)],2)},p.__file="src/components/PaymentPage/PaymentMethods/CreditCard/CreditCard.vue";export{p as default};

import{p as e}from"../../../../index-qW3CXwUR.min.js";import{m as t,P as a,a as o,c as s,b as i,o as n,F as r,r as d,d as l,n as c,e as p,g as m,h}from"../../../../PpcpStore-BczVk-qc.min.js";import{c as u}from"../../../../createPPCPPaymentRest-BAEhcVqU.min.js";var y={name:"PpcpApmPayment",props:{open:{type:Boolean,required:!1}},data:()=>({selectedMethod:null,apmPaymentLoaded:!1,allowedMethods:{},errorMessages:{},errorMessage:"",ErrorMessage:null,PrivacyPolicy:null,RadioButton:null,Recaptcha:null,Agreements:null,isRecaptchaVisible:()=>{},orderID:null,availableMethods:[],prefix:"ppcp_apm",isMobile:window.innerWidth<=768}),computed:{...o(a,["apm","environment","buyerCountry","productionClientId","sandboxClientId"])},watch:{selectedMethod:{handler(e){null!==e&&(this.selectedMethod=e)},immediate:!0,deep:!0}},async mounted(){const{default:{components:{ErrorMessage:e,PrivacyPolicy:t,RadioButton:a,Recaptcha:o,Agreements:s}}}=await import(window.bluefinchCheckout.main);this.Agreements=s,this.ErrorMessage=e,this.RadioButton=a,this.Recaptcha=o,this.PrivacyPolicy=t},async created(){const[e,t,a,o]=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.useRecaptchaStore","stores.usePaymentStore","stores.useConfigStore","stores.useCartStore"]);this.isRecaptchaVisible=e.isRecaptchaVisible,t.$subscribe((e=>{void 0!==e.payload.selectedMethod&&(this.selectedMethod=e.payload.selectedMethod,this.errorMessages={})})),await a.getInitialConfig(),await o.getCart(),this.allowedMethods=this.getAllowedMethods(),await Promise.all(Object.values(this.allowedMethods).map((e=>this.initApmPay(e.name)))),this.open&&await this.selectPaymentMethod(),window.addEventListener("resize",this.updateDeviceType),this.updateDeviceType()},beforeUnmount(){window.removeEventListener("resize",this.updateDeviceType)},methods:{...t(a,["getEnvironment","mapAddress","makePayment","mapSelectedAddress"]),updateDeviceType(){this.isMobile=window.innerWidth<=768},async selectPaymentMethod(e){this.selectedMethod=e;(await window.bluefinchCheckout.helpers.loadFromCheckout("stores.usePaymentStore")).selectPaymentMethod(e)},getAllowedMethods(){const e=this.apm.allowedPayments,t={};return e.forEach((e=>{t[e.value]={title:e.label,name:e.value,prefixedName:`${this.prefix}_${e.value}`}})),this.allowedMethods=t,t},async initApmPay(t){const[a,o]=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.useConfigStore","stores.useCartStore"]),s=this,i={...{sandboxClientId:this.sandboxClientId,productionClientId:this.productionClientId,pageType:"checkout",environment:this.environment,commit:!0,amount:o.cart.prices.grand_total.value,buyerCountry:this.buyerCountry,currency:a.currencyCode},...{createOrder:e=>this.createOrder(e,s),onApprove:e=>this.onApprove(e,s),onClick:()=>this.onClick(),onCancel:e=>this.onCancel(e,s),onError:e=>this.onError(e),isPaymentMethodAvailable:(e,t)=>this.isPaymentMethodAvailable(e,t)}};e.apmPayments(i,t),this.apmPaymentLoaded=!0},isPaymentMethodAvailable(e,t){document.getElementById(`paypal_${t}_method`).style.display=e?"":"none"},createOrder:async(e,t)=>{try{const a=`${t.prefix}_${e}`,o=await u(a,1),s=JSON.parse(o),[i]=s;return t.orderID=i,t.orderID}catch(e){return console.error("Error during createOrder:",e),null}},onClick:async()=>{const[e,t,a,o]=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useAgreementStore","stores.useLoadingStore","stores.useRecaptchaStore"]);e.setErrorMessage("");const s=t.validateAgreements(),i=await o.validateToken("placeOrder");return!(!s||!i)&&(a.setLoadingState(!0),!0)},onApprove:async(e,t)=>{const a=`${t.prefix}_${e}`,[o,s,i]=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useLoadingStore","stores.useCartStore"]);return t.makePayment(i.cart.email,t.orderID,t.prefix,!1,!1,a).then((()=>{t.errorMessages[a]="",t.redirectToSuccess()})).catch((e=>{s.setLoadingState(!1);try{window.bluefinchCheckout.helpers.handleServiceError(e)}catch(e){o.setErrorMessage(e)}}))},onCancel:async(e,t)=>{const a=`${t.prefix}_${e}`,o=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.useLoadingStore"]);t.errorMessages[a]="Cannot validate payment.",o.setLoadingState(!1)},onError:async e=>{const[t,a]=await window.bluefinchCheckout.helpers.loadFromCheckout(["stores.usePaymentStore","stores.useLoadingStore"]);a.setLoadingState(!1),t.setErrorMessage(e)},redirectToSuccess(){window.location.href=window.bluefinchCheckout.helpers.getSuccessPageUrl()}}};const w={key:0},v=["id"],P=["onClick","onKeydown"],f=["id"],M={class:"actions-toolbar","data-bind":"css: {'ppcp-disabled': !isPlaceOrderActionAllowed()}"},g=["id"],C=["id"],b={class:"recaptcha"};y.render=function(e,t,a,o,u,y){return e.apm.enabled?(n(),s("div",w,[(n(!0),s(r,null,d(u.allowedMethods,(e=>(n(),s("div",{key:e.name},[i(" * We need to hide iDEAL from mobile devices as the webhook callbacks aren't currently available\n           * so the method fails to completely successfully. "),l("div",{style:h({display:"ideal"===e.name&&u.isMobile?"none":"block"})},[l("div",{id:`paypal_${e.name}_method`,style:{display:"none"},class:c([{active:u.selectedMethod===e.prefixedName},"apm-payment-container"])},[l("div",{class:c(["apm-payment-title",u.selectedMethod===e.prefixedName?"selected":""]),onClick:t=>y.selectPaymentMethod(e.prefixedName),onKeydown:t=>y.selectPaymentMethod(e.prefixedName)},[(n(),p(m(u.RadioButton),{id:`paypal_${e.name}_select`,text:e.title,checked:u.selectedMethod===e.prefixedName,"data-cy":"apm-payment-radio",class:"apm-payment-radio",onClick:t=>y.selectPaymentMethod(e.prefixedName),onKeydown:t=>y.selectPaymentMethod(e.prefixedName)},null,40,["id","text","checked","onClick","onKeydown"])),l("span",{id:`paypal_${e.name}_mark`},null,8,f)],42,P),u.errorMessages[e.prefixedName]?(n(),p(m(u.ErrorMessage),{key:0,message:u.errorMessages[e.prefixedName],attached:!1},null,8,["message"])):i("v-if",!0),l("div",{id:"ppcp-apm-payment",style:h({display:u.selectedMethod===e.prefixedName?"block":"none"}),class:c(u.apmPaymentLoaded||u.selectedMethod!==e.prefixedName?"":"text-loading"),"data-cy":"checkout-PPCP-apm-payment"},null,6),l("div",{style:h({display:u.selectedMethod===e.prefixedName?"block":"none"}),class:"apm-payment-content"},[l("div",M,[l("div",{id:`paypal_${e.name}_fields`},null,8,g),l("div",{id:`paypal_${e.name}_button`},null,8,C)]),(n(),p(m(u.PrivacyPolicy))),l("div",b,[u.isRecaptchaVisible("placeOrder")?(n(),p(m(u.Recaptcha),{key:0,id:"placeOrder",location:`${e.name}-ppcpPaymentApm`},null,8,["location"])):i("v-if",!0)]),(n(),p(m(u.Agreements),{id:"ppcp-checkout-apm-payment"}))],4)],10,v)],4)])))),128))])):i("v-if",!0)},y.__file="src/components/PaymentPage/PaymentMethods/Apm/Apm.vue";export{y as default};

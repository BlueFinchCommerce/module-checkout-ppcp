import{p as e}from"../../../index-esHGRNzX.min.js";import{m as t,a as o,g as a,P as n,c as i,n as s,b as r,o as p}from"../../../createPPCPPaymentRest-DrWsrT7y.min.js";var l={name:"PpcpApplePay",data:()=>({applePayLoaded:!1,applePayConfig:null,key:"ppcpApplePay",method:"ppcp_applepay",orderID:null,applePayAvailable:!1,applePayTotal:"",dataCollectorInstance:null,shippingMethods:[],isEligible:!1}),computed:{...t(n,["apple","environment","buyerCountry","productionClientId","sandboxClientId"])},async created(){const[e,t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.usePaymentStore","stores.useConfigStore"]);t.addExpressMethod(this.key),await o.getInitialConfig(),await e.getCart(),this.apple.merchantName||await this.getInitialConfigValues();t.availableMethods.find((e=>e.code===this.method))?this.renderApplePayButton():(t.removeExpressMethod(this.key),this.applePayLoaded=!0)},methods:{...o(n,["getInitialConfigValues","makePayment","mapAppleAddress"]),async renderApplePayButton(){const t=await window.geneCheckout.helpers.loadFromCheckout(["stores.useConfigStore"]),o={...{sandboxClientId:this.sandboxClientId,productionClientId:this.productionClientId,intent:this.apple.paymentAction,pageType:"checkout",environment:this.environment,currency:t.currencyCode,buyerCountry:this.buyerCountry},...{getPaymentRequest:e=>this.getPaymentRequest(e),onShippingContactSelect:(e,t)=>this.onShippingContactSelect(e,t),onShippingMethodSelect:(e,t)=>this.onShippingMethodSelect(e,t),onPaymentAuthorized:(e,t,o)=>this.onPaymentAuthorized(e,t,o),onValidate:()=>this.onValidate()}};e.applePayment(o,"ppcp-apple-pay")},async onValidate(){const[e,t]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useAgreementStore","stores.usePaymentStore"]);return t.setErrorMessage(""),e.validateAgreements()},async getPaymentRequest(e){this.applePayAvailable=!0;const[t,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore"]),{countryCode:a,merchantCapabilities:n,supportedNetworks:i}=e,s=["name","email","phone"];return t.cart.is_virtual||s.push("postalAddress"),{countryCode:a,currencyCode:o.currencyCode,merchantCapabilities:n,supportedNetworks:i,requiredShippingContactFields:s,requiredBillingContactFields:["postalAddress","name"],total:{label:this.apple.merchantName,amount:(t.cartGrandTotal/100).toString(),type:"final"}}},async onPaymentAuthorized(e,t,o){const[n,i]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore"]),{shippingContact:s,billingContact:r}=e.payment,p=s.emailAddress,l=s.phoneNumber,c=await this.mapAppleAddress(r,p,l);let d=null;if(n.cart.is_virtual||(d=await this.mapAppleAddress(s,p,l)),!i.countries.some((({id:e})=>e===c.country_code)))return void t.completePayment(window.ApplePaySession.STATUS_FAILURE);const h=await a(this.method);[this.orderID]=JSON.parse(h),o.confirmOrder({orderId:this.orderID,token:e.payment.token,billingContact:e.payment.billingContact}).then((async()=>{try{window.geneCheckout.services.setAddressesOnCart(d,c,p).then((()=>this.makePayment(p,this.orderID,this.method,!0))).then((async()=>{t.completePayment(window.ApplePaySession.STATUS_SUCCESS),window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()}))}catch(e){console.log(e),t.completePayment(window.ApplePaySession.STATUS_FAILURE)}})).catch((e=>{e&&(console.error("Error confirming order with applepay token"),console.error(e),t.completePayment(window.ApplePaySession.STATUS_FAILURE))}))},async onShippingContactSelect(e,t){const[o,a,n]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore","stores.useShippingMethodsStore"]),i={city:e.shippingContact.locality,company:"",region:e.shippingContact.administrativeArea,region_id:a.getRegionId(e.shippingContact.countryCode,e.shippingContact.administrativeArea),country_code:e.shippingContact.countryCode.toUpperCase(),postcode:e.shippingContact.postalCode,street:["0"],telephone:"000000000",firstname:"UNKNOWN",lastname:"UNKNOWN"};this.address=i;try{const e=await window.geneCheckout.services.getShippingMethods(i,this.method,!0),s=e.shipping_addresses[0].available_shipping_methods.filter((({method_code:e})=>"nominated_delivery"!==e));if(this.shippingMethods=s,!s.length){const e={errors:[new window.ApplePayError("addressUnserviceable","postalAddress",this.applePayNoShippingMethods)],newTotal:{label:a.websiteName,amount:"0.00",type:"pending"}};return void t.completeShippingContactSelection(e)}const r=s[0];await n.submitShippingInfo(r.carrier_code,r.method_code);const p={newShippingMethods:this.mapShippingMethods(s),newTotal:{label:this.applePayTotal,amount:parseFloat(o.cartGrandTotal/100).toFixed(2)},newLineItems:[{type:"final",label:"Subtotal",amount:o.cart.prices.subtotal_including_tax.value.toString()},{type:"final",label:"Shipping",amount:r.amount.value.toString()}]};o.cartDiscountTotal&&p.newLineItems.push({type:"final",label:"Discount",amount:o.cartDiscountTotal.toString()}),t.completeShippingContactSelection(p)}catch(e){console.error("Error fetching shipping methods:",e);const o={errors:[new window.ApplePayError("addressUnserviceable","postalAddress","Unable to fetch shipping methods. Please try again later.")],newTotal:{label:a.websiteName,amount:"0.00",type:"pending"}};t.completeShippingContactSelection(o)}},async onShippingMethodSelect(e,t){const[o,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useShippingMethodsStore"]),n=this.shippingMethods.find((({method_code:t})=>t===e.shippingMethod.identifier));await a.submitShippingInfo(n.carrier_code,n.method_code);const i={newTotal:{label:this.applePayTotal,amount:parseFloat(o.cartGrandTotal/100).toFixed(2)},newLineItems:[{type:"final",label:"Subtotal",amount:o.cart.prices.subtotal_including_tax.value.toString()},{type:"final",label:"Shipping",amount:n.amount.value.toString()}]};o.cartDiscountTotal&&i.newLineItems.push({type:"final",label:"Discount",amount:o.cartDiscountTotal.toString()}),t.completeShippingMethodSelection(i)},mapShippingMethods:e=>e.map((e=>({label:e.method_title,detail:e.carrier_title||"",amount:e.amount.value.toString(),identifier:e.method_code,carrierCode:e.carrier_code})))}};l.render=function(e,t,o,a,n,l){return n.applePayAvailable?(p(),i("div",{key:0,id:"ppcp-apple-pay",class:s(["ppcp-apple-pay-container",n.applePayLoaded?"ppcp-apple-pay":"text-loading"])},null,2)):r("v-if",!0)},l.__file="src/components/ExpressPayments/ApplePay/ApplePay.vue";export{l as default};

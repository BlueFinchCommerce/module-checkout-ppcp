import{m as e,a as t,c as a,u as o,l as i,b as n,d as s,e as r,n as p,r as l,o as c}from"../../../createPPCPPaymentRest-Wx50J8iA.min.js";var d={name:"PpcpApplePay",data:()=>({applePayLoaded:!1,applePayConfig:null,key:"ppcpApplePay",method:"ppcp_applepay",orderID:null,applePayAvailable:!1,applePayTotal:"",dataCollectorInstance:null,shippingMethods:[],isEligible:!1}),computed:{...e(o,["apple","environment","buyerCountry","productionClientId","sandboxClientId"])},async created(){const[e,t,a]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.usePaymentStore","stores.useConfigStore"]);t.addExpressMethod(this.key),await a.getInitialConfig(),await e.getCart(),this.apple.merchantName||await this.getInitialConfigValues();t.availableMethods.find((e=>e.code===this.method))?(await this.addSdkScript(),this.showApplePay()):(t.removeExpressMethod(this.key),this.applePayLoaded=!0)},methods:{...t(o,["getInitialConfigValues"]),async addSdkScript(){const e=await window.geneCheckout.helpers.loadFromCheckout(["stores.useConfigStore"]),t=i(),a={intent:this.apple.paymentAction,currency:e.currencyCode,components:"applepay"};"sandbox"===this.environment?(a["buyer-country"]=this.buyerCountry,a["client-id"]=this.sandboxClientId):a["client-id"]=this.productionClientId;try{await Promise.all([t("https://www.paypal.com/sdk/js",a,"ppcp_applepay"),t("https://applepay.cdn-apple.com/jsapi/v1.1.0/apple-pay-sdk.js",{},"")])}catch(e){throw console.error("Error loading SDK scripts:",e),new Error("Failed to load required SDK scripts.")}},showApplePay(){if(!window.ApplePaySession||!window.ApplePaySession.canMakePayments||"https:"!==window.location.protocol)return;this.applePayAvailable=!0;window[`paypal_${this.method}`].Applepay().config().then((e=>{this.applePayConfig=e,this.isEligible=!!e.isEligible,this.applePayLoaded=!0})).catch((()=>{console.error("Error while fetching Apple Pay configuration.")}))},async onClick(){const[e,t,a,o,i,n]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useAgreementStore","stores.useCartStore","stores.useCustomerStore","stores.useConfigStore","stores.useLoadingStore","stores.usePaymentStore"]);n.setErrorMessage("");if(!e.validateAgreements())return;const s=window[`paypal_${this.method}`].Applepay();try{const e=["name","email","phone"];t.cart.is_virtual||e.push("postalAddress");const n={countryCode:o.countryCode,currencyCode:o.currencyCode,merchantCapabilities:this.applePayConfig.merchantCapabilities,supportedNetworks:this.applePayConfig.supportedNetworks,requiredShippingContactFields:e,requiredBillingContactFields:["postalAddress","name"],total:{label:this.apple.merchantName,amount:(t.cartGrandTotal/100).toString(),type:"final"}},r=new window.ApplePaySession(4,n);r.onvalidatemerchant=e=>{s.validateMerchant({validationUrl:e.validationURL}).then((e=>{r.completeMerchantValidation(e.merchantSession)})).catch((e=>{a.createNewAddress("shipping"),console.error(e),r.abort(),i.setLoadingState(!1)}))},t.cart.is_virtual||(r.onshippingcontactselected=e=>this.onShippingContactSelect(e,r),r.onshippingmethodselected=e=>this.onShippingMethodSelect(e,r)),r.oncancel=()=>{a.createNewAddress("shipping")},r.onpaymentauthorized=e=>this.onAuthorized(e,r),r.begin()}catch(e){a.createNewAddress("shipping"),await this.setApplePayError()}},async onAuthorized(e,t){const[o,i]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore"]),n=window[`paypal_${this.method}`].Applepay(),{shippingContact:s,billingContact:r}=e.payment,p=s.emailAddress,l=s.phoneNumber,c=await this.mapAddress(r,p,l);let d=null;if(o.cart.is_virtual||(d=await this.mapAddress(s,p,l)),!i.countries.some((({id:e})=>e===c.country_code)))return void t.completePayment(window.ApplePaySession.STATUS_FAILURE);const h=await a(this.method);[this.orderID]=JSON.parse(h),n.confirmOrder({orderId:this.orderID,token:e.payment.token,billingContact:e.payment.billingContact}).then((async()=>{try{window.geneCheckout.services.setAddressesOnCart(d,c,p).then((()=>this.makePayment(p))).then((async()=>{t.completePayment(window.ApplePaySession.STATUS_SUCCESS),await window.geneCheckout.services.refreshCustomerData(["cart"]),window.location.href=window.geneCheckout.helpers.getSuccessPageUrl()}))}catch(e){console.log(e),t.completePayment(window.ApplePaySession.STATUS_FAILURE)}})).catch((e=>{e&&(console.error("Error confirming order with applepay token"),console.error(e),t.completePayment(window.ApplePaySession.STATUS_FAILURE))}))},async onShippingContactSelect(e,t){const[a,o,i]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useConfigStore","stores.useShippingMethodsStore"]),n={city:e.shippingContact.locality,company:"",region:e.shippingContact.administrativeArea,region_id:o.getRegionId(e.shippingContact.countryCode,e.shippingContact.administrativeArea),country_code:e.shippingContact.countryCode.toUpperCase(),postcode:e.shippingContact.postalCode,street:["0"],telephone:"000000000",firstname:"UNKNOWN",lastname:"UNKNOWN"};this.address=n;const s=(await window.geneCheckout.services.getShippingMethods(n,this.method,!0)).shipping_addresses[0].available_shipping_methods.filter((({method_code:e})=>"nominated_delivery"!==e));if(this.shippingMethods=s,!s.length){const e={errors:[new window.ApplePayError("addressUnserviceable","postalAddress",this.applePayNoShippingMethods)],newTotal:{label:o.websiteName,amount:"0.00",type:"pending"}};return void t.completeShippingContactSelection(e)}const r=s[0];await i.submitShippingInfo(r.carrier_code,r.method_code);const p={newShippingMethods:this.mapShippingMethods(s),newTotal:{label:this.applePayTotal,amount:parseFloat(a.cartGrandTotal/100).toFixed(2)},newLineItems:[{type:"final",label:"Subtotal",amount:a.cart.prices.subtotal_including_tax.value.toString()},{type:"final",label:"Shipping",amount:r.amount.value.toString()}]};a.cartDiscountTotal&&p.newLineItems.push({type:"final",label:"Discount",amount:a.cartDiscountTotal.toString()}),t.completeShippingContactSelection(p)},async onShippingMethodSelect(e,t){const[a,o]=await window.geneCheckout.helpers.loadFromCheckout(["stores.useCartStore","stores.useShippingMethodsStore"]),i=this.shippingMethods.find((({method_code:t})=>t===e.shippingMethod.identifier));await o.submitShippingInfo(i.carrier_code,i.method_code);const n={newTotal:{label:this.applePayTotal,amount:parseFloat(a.cartGrandTotal/100).toFixed(2)},newLineItems:[{type:"final",label:"Subtotal",amount:a.cart.prices.subtotal_including_tax.value.toString()},{type:"final",label:"Shipping",amount:i.amount.value.toString()}]};a.cartDiscountTotal&&n.newLineItems.push({type:"final",label:"Discount",amount:a.cartDiscountTotal.toString()}),t.completeShippingMethodSelection(n)},mapShippingMethods:e=>e.map((e=>({label:e.method_title,detail:e.carrier_title||"",amount:e.amount.value.toString(),identifier:e.method_code,carrierCode:e.carrier_code}))),async makePayment(e){const t={email:e,paymentMethod:{method:this.method,additional_data:{"express-payment":!0,"paypal-order-id":this.orderID},extension_attributes:window.geneCheckout.helpers.getPaymentExtensionAttributes()}};return window.geneCheckout.services.createPaymentRest(t)},async setApplePayError(){(await window.geneCheckout.helpers.loadFromCheckout(["stores.usePaymentStore"])).setErrorMessage("We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.")},async mapAddress(e,t,a){const o=(await window.geneCheckout.helpers.loadFromCheckout(["stores.useConfigStore"])).getRegionId(e.countryCode.toUpperCase(),e.administrativeArea);return{email:t,telephone:a,firstname:e.givenName,lastname:e.familyName,company:e.company||"",street:e.addressLines,city:e.locality,country_code:e.countryCode.toUpperCase(),postcode:e.postalCode,region:{...e.administrativeArea?{region:e.administrativeArea}:{},...o?{region_id:o}:{}}}}}};d.render=function(e,t,a,o,i,d){const h=l("apple-pay-button");return i.applePayAvailable?(c(),n("div",{key:0,class:p(["ppcp-apple-pay-container",i.applePayLoaded?"ppcp-apple-pay":"text-loading"])},[i.applePayLoaded?(c(),s(h,{key:0,onClick:d.onClick,id:"ppcp-apple-pay",type:"buy",locale:"en"},null,8,["onClick"])):r("v-if",!0)],2)):r("v-if",!0)},d.__file="src/components/ExpressPayments/ApplePay/ApplePay.vue";export{d as default};
